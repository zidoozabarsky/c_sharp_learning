<!--  
//  Copyright (c) Microsoft Corporation.  All rights reserved.
// 
//  The MIT License (MIT)
// 
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE. -->
<Page
    x:Class="PhotoSharingApp.Universal.Views.DebugPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoSharingApp.Universal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="using:PhotoSharingApp.Universal.ValueConverters"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.Resources>
        <valueConverters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <RelativePanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <Viewbox Height="80" x:Name="headerImage"
                     RelativePanel.AlignHorizontalCenterWithPanel="True">
                <SymbolIcon Symbol="Admin" />
            </Viewbox>
            <ItemsControl ItemsSource="{Binding AuthenticationProviders}"
                          RelativePanel.Below="headerImage"
                          Margin="0,12,0,0"
                          IsTabStop="False">
                <ItemsControl.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="0,0,0,12" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                </ItemsControl.Resources>

                <ItemsControl.ItemContainerTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition IsStaggeringEnabled="True"
                                                 FromVerticalOffset="100" />
                    </TransitionCollection>
                </ItemsControl.ItemContainerTransitions>

                <ComboBox x:Name="serviceComboBox"
                          IsEnabled="{Binding IsOn, ElementName=photoDummyServiceSwitch, Converter={StaticResource InverseBooleanConverter}}"
                          ItemsSource="{Binding MobileServices}" DisplayMemberPath="ServiceBaseUrl"
                          SelectedItem="{Binding SelectedService, Mode=TwoWay}" HorizontalContentAlignment="Stretch" />
                <TextBlock Text="Service Connection Status" />
                <Ellipse Height="18" Width="18" HorizontalAlignment="Left" Margin="12,0,0,0">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding IsServiceConnected}" Value="True">
                            <core:ChangePropertyAction PropertyName="Fill" Value="Green" />
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{Binding IsServiceConnected}" Value="False">
                            <core:ChangePropertyAction PropertyName="Fill" Value="Red" />
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Ellipse>
                <ToggleSwitch x:Name="photoDummyServiceSwitch" IsOn="{Binding UsePhotoDummyService, Mode=TwoWay}">Use Photo Dummy Service</ToggleSwitch>
                <ToggleSwitch IsEnabled="{Binding IsOn, ElementName=photoDummyServiceSwitch}"
                              IsOn="{Binding IsErrorSimulationEnabled, Mode=TwoWay}">
                    IsServiceErrorSimulationEnabled
                </ToggleSwitch>
                <ToggleSwitch IsOn="{Binding UseStoreMock, Mode=TwoWay}">Use Store Mock</ToggleSwitch>
                <Button Content="Throw unhandled exception" Command="{Binding ThrowExceptionCommand}" />
            </ItemsControl>
        </RelativePanel>
    </Grid>
</Page>