<!--  
//  Copyright (c) Microsoft Corporation.  All rights reserved.
// 
//  The MIT License (MIT)
// 
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE. -->
<local:BasePage
    x:Class="PhotoSharingApp.Universal.Views.StreamPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoSharingApp.Universal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="using:PhotoSharingApp.Universal.ValueConverters"
    xmlns:controls="using:PhotoSharingApp.Universal.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:design="using:PhotoSharingApp.Universal.ViewModels.Design"    
    mc:Ignorable="d"
    x:Name="pageRoot"
    d:DataContext="{d:DesignInstance design:StreamDesignViewModel, IsDesignTimeCreatable=True}">

    <Page.Resources>
        <valueConverters:RelativeTimeConverter x:Key="RelativeTimeConverter" />
        <valueConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="GridViewItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="0,0,0,0" />
            <Setter Property="Margin" Value="0,0,0,6" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter
                            CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            ContentMargin="{TemplateBinding Padding}"
                            CheckMode="Overlay"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                            DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            PointerOverBackground="Transparent"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                            SelectionCheckMarkVisualEnabled="True"
                            SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"
                            SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                            SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="layoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:PageHeader>
            <controls:PageHeader.HeaderContent>
                <TextBlock Text="{Binding Category.Name}" Style="{ThemeResource PageTitleTextBlockStyle}" />
            </controls:PageHeader.HeaderContent>
        </controls:PageHeader>

        <CommandBar Grid.Row="2">
            <AppBarButton Icon="Camera" Label="Upload" Command="{Binding ContributeCommand}" />
            <AppBarButton Icon="Refresh" Label="Refresh" Command="{Binding RefreshCommand}" />
        </CommandBar>

        <Grid x:Name="contentRoot" Margin="0" Grid.Row="1">
            <GridView ItemsSource="{Binding Photos}" IsItemClickEnabled="True" SelectionMode="None" 
                      d:IsHidden="False" ItemContainerStyle="{StaticResource GridViewItemContainerStyle}"
                      Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
                      x:Name="photosList">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Transparent" BorderThickness="2" Margin="{Binding ImageMargin, ElementName=pageRoot}">
                            <Grid x:Name="imageRoot" 
                                  Width="{Binding ImageWidth, ElementName=pageRoot}"
                                  Height="{Binding ImageHeight, ElementName=pageRoot}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <controls:AnimatedImage Grid.Row ="0" PlaceHolder="../Assets/PlaceHolder.jpg" 
                                                    VerticalAlignment="Top"
                                                    Source="{Binding ImageUrl}" x:Name="PhotoImage" d:DesignHeight="300"
                                                    d:DesignWidth="300" 
                                                    Canvas.ZIndex="0">
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:InvokeCommandAction
                                            Command="{Binding DataContext.PhotoSelectedCommand, ElementName=layoutRoot}"
                                            CommandParameter="{Binding}" />
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </controls:AnimatedImage>

                                <Grid Row="1" Margin="12,0,12,12" x:Name="photoSummary">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Border Margin="0,-35,0,0">
                                        <Border.Transitions>
                                            <TransitionCollection>
                                                <PopupThemeTransition></PopupThemeTransition>
                                            </TransitionCollection>
                                        </Border.Transitions>
                                        <Viewbox Width="70" Height="70" HorizontalAlignment="Left">
                                            <controls:UserProfilePictureControl
                                                Width="70"
                                                Height="70"
                                                ShowBorder="true"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Source="{Binding User.ProfilePictureUrl}">
                                                <interactivity:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Tapped">
                                                        <core:InvokeCommandAction
                                                    Command="{Binding DataContext.UserSelectedCommand, ElementName=layoutRoot}"
                                                    CommandParameter="{Binding User}" />
                                                    </core:EventTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </controls:UserProfilePictureControl>
                                        </Viewbox>
                                    </Border>

                                    <Viewbox Width="50" Height="50" Margin="0,-35,0,0" Grid.Column="2" Canvas.ZIndex="1"
                                         HorizontalAlignment="Right">
                                        <controls:GoldButton
                                             Command="{Binding DataContext.GiveGoldCommand, ElementName=layoutRoot}" 
                                             CommandParameter="{Binding}"
                                             IsEnabled="{Binding CanGiveGold}" FontSize="18"
                                             Content="{Binding GoldCount}" VerticalAlignment="Top" />
                                    </Viewbox>

                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Margin="0,12"
                                           Text="{Binding Caption}" TextWrapping="WrapWholeWords"
                                           TextTrimming="CharacterEllipsis" MaxLines="1" />

                                    <TextBlock FontSize="14" FontWeight="Medium" Grid.Row="2" Grid.ColumnSpan="3" 
                                       Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
                                       Text="{Binding CreatedAt, Converter={StaticResource RelativeTimeConverter}}" 
                                       TextWrapping="WrapWholeWords" />

                                </Grid>
                            </Grid>
                            <interactivity:Interaction.Behaviors>
                                <core:DataTriggerBehavior Binding="{Binding IsHighlighted}" Value="True">
                                    <core:ChangePropertyAction PropertyName="BorderBrush" Value="{StaticResource AppAccentLightColorBrush}" />
                                </core:DataTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Border>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>

            <ProgressRing IsActive="{Binding IsBusy}"
                        Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </Grid>
</local:BasePage>