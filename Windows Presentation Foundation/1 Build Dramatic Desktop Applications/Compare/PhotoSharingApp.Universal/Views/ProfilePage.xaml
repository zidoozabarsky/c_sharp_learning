<!--  
//  Copyright (c) Microsoft Corporation.  All rights reserved.
// 
//  The MIT License (MIT)
// 
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE. -->
<local:BasePage
    x:Class="PhotoSharingApp.Universal.Views.ProfilePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhotoSharingApp.Universal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverters="using:PhotoSharingApp.Universal.ValueConverters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:design="using:PhotoSharingApp.Universal.ViewModels.Design"
    xmlns:actions="using:PhotoSharingApp.Universal.Actions"
    xmlns:controls="using:PhotoSharingApp.Universal.Controls"
    mc:Ignorable="d"
    x:Name="pageRoot"
    d:DataContext="{d:DesignInstance design:ProfileDesignViewModel, IsDesignTimeCreatable=True}">

    <Page.Resources>
        <valueConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <valueConverters:RelativeTimeConverter x:Key="RelativeTimeConverter" />
        <valueConverters:PhotoStatusToStringConverter x:Key="PhotoStatusToStringConverter" />
        <Style x:Key="GridViewItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,0,4" />
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                               ContentMargin="{TemplateBinding Padding}" CheckMode="Overlay"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckBoxBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                                               DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                               FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               PointerOverForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                               PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                               PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                               ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}"
                                               SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}"
                                               SelectionCheckMarkVisualEnabled="True"
                                               SelectedForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                               SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}"
                                               SelectedBackground="{ThemeResource SystemControlHighlightAccentBrush}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="layoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <controls:PageHeader>
            <controls:PageHeader.HeaderContent>
                <TextBlock Text="Profile" Style="{ThemeResource PageTitleTextBlockStyle}" />
            </controls:PageHeader.HeaderContent>
        </controls:PageHeader>

        <Grid Margin="0,0,0,0" Height="200" Grid.Row="1" x:Name="titleGrid"
              Visibility="{Binding ArePhotosEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image Grid.ColumnSpan="3" VerticalAlignment="Center" Source="{Binding User.ProfilePictureUrl}"
                   Stretch="UniformToFill" />
            <Border Grid.ColumnSpan="3" Background="#CCFFFFFF" />
            <controls:UserProfilePictureControl Grid.Column="1"
                                                Width="130"
                                                Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
                                                Source="{Binding User.ProfilePictureUrl}"
                                                x:Name="profilePictureControl">
                <controls:UserProfilePictureControl.Transitions>
                    <TransitionCollection>
                        <EntranceThemeTransition />
                    </TransitionCollection>
                </controls:UserProfilePictureControl.Transitions>
            </controls:UserProfilePictureControl>

            <StackPanel Grid.Column="0" VerticalAlignment="Center">
                <TextBlock x:Name="photosUploadedCounter" Text="{Binding PhotosCount}" HorizontalAlignment="Center"
                           FontWeight="Bold"
                           FontSize="36" />
                <TextBlock x:Name="photosUploadedTitle" TextWrapping="WrapWholeWords" Text="Photos"
                           HorizontalAlignment="Center" FontWeight="Light" />
            </StackPanel>

            <StackPanel Grid.Column="2" VerticalAlignment="Center">
                <TextBlock x:Name="goldBalanceCounter" Text="{Binding GoldBalance}" HorizontalAlignment="Center"
                           FontWeight="Bold"
                           FontSize="36" />
                <TextBlock x:Name="goldBalanceTitle" Text="Gold" TextWrapping="WrapWholeWords"
                           HorizontalAlignment="Center" FontWeight="Light" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2" Visibility="{Binding ArePhotosEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"
                HorizontalAlignment="Center" VerticalAlignment="Center" Margin="12,0">
            <Grid.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromVerticalOffset="100"></EntranceThemeTransition>
                </TransitionCollection>
            </Grid.Transitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Viewbox Height="80">
                <SymbolIcon Symbol="Camera" />
            </Viewbox>
            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Grid.Row="1" FontWeight="Normal"
                Text="You don't have any photos yet, upload some and earn some Gold!"/>
        </Grid>

        <GridView ItemsSource="{Binding Photos}"
                  IsItemClickEnabled="True" SelectionMode="None" Grid.Row="2"
                  ItemContainerStyle="{StaticResource GridViewItemContainerStyle}">
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="{Binding ImageMargin, ElementName=pageRoot}"
                          Width="{Binding ImageWidth, ElementName=pageRoot}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="140" />
                        </Grid.RowDefinitions>

                        <controls:AnimatedImage Grid.Row="0" PlaceHolder="../Assets/PlaceHolder.jpg"
                                                VerticalAlignment="Top"
                                                Source="{Binding ImageUrl}" x:Name="ImageRoot" d:DesignHeight="300"
                                                d:DesignWidth="300"
                                                Canvas.ZIndex="0">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:InvokeCommandAction
                                        Command="{Binding DataContext.PhotoSelectedCommand, ElementName=layoutRoot}"
                                        CommandParameter="{Binding}" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="Holding">
                                    <actions:OpenMenuFlyoutAction IsEnabled="{Binding DataContext.IsShowingCurrentUser, ElementName=layoutRoot}"/>
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <actions:OpenMenuFlyoutAction IsEnabled="{Binding DataContext.IsShowingCurrentUser, ElementName=layoutRoot}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>

                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Uid="DeletePhotoFlyoutItem" Text="delete"
                                                    Command="{Binding DataContext.DeletePhotoCommand, ElementName=layoutRoot}"
                                                    CommandParameter="{Binding}"
                                                    Visibility="{Binding DataContext.IsShowingCurrentUser, ElementName=layoutRoot, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <MenuFlyoutItem x:Uid="ChangeProfilePicFlyoutItem" Text="set as profile pic"
                                                    Command="{Binding DataContext.SetProfilePhotoCommand, ElementName=layoutRoot}"
                                                    CommandParameter="{Binding}"
                                                    Visibility="{Binding DataContext.IsShowingCurrentUser, ElementName=layoutRoot, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                        </controls:AnimatedImage>

                        <Grid Row="1" Margin="12,0,12,12" x:Name="photoSummary">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Viewbox Width="60" Height="60" Margin="0,-30,0,0" Grid.Column="2" Canvas.ZIndex="1"
                                     HorizontalAlignment="Right">
                                <controls:GoldButton Content="{Binding GoldCount}" IsTabStop="False" />
                            </Viewbox>
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Margin="0,12"
                                       Text="{Binding Caption}" TextWrapping="WrapWholeWords"
                                       TextTrimming="CharacterEllipsis" MaxLines="2" />

                            <HyperlinkButton Foreground="{StaticResource AppAccentLightColorBrush}"
                                             Visibility="Collapsed"
                                             Command="{Binding DataContext.SetProfilePhotoCommand, ElementName=layoutRoot}"
                                             CommandParameter="{Binding}"
                                             Grid.Row="0" Grid.ColumnSpan="3" Content="Set as profile picture" />

                            <TextBlock FontSize="14" FontWeight="Medium" Grid.Row="2"
                                       Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"
                                       Text="{Binding CreatedAt, Converter={StaticResource RelativeTimeConverter}}" />
                            
                            <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" 
                                  Visibility="{Binding HasActiveStatus, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}">
                                <Border HorizontalAlignment="Right" Background="Red"
                                        Padding="6">
                                    <TextBlock Text="{Binding Status,Converter={StaticResource PhotoStatusToStringConverter}}"
                                               Foreground="White" FontWeight="SemiBold" FontSize="14"></TextBlock>
                                </Border>
                            </Grid>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </GridView>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="profilePictureControl.Width" Value="80" />
                        <Setter Target="photosUploadedCounter.FontSize" Value="20" />
                        <Setter Target="photosUploadedTitle.FontSize" Value="14" />
                        <Setter Target="goldBalanceCounter.FontSize" Value="20" />
                        <Setter Target="goldBalanceTitle.FontSize" Value="14" />
                        <Setter Target="titleGrid.Height" Value="100" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</local:BasePage>